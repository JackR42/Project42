# azure-pipelines.yml
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: windows-latest

stages:
- stage: TF_VALIDATE
  jobs:
  - job:
    steps:

    - task: TerraformInstaller@0
      displayName: TF_Install
      inputs:
        terraformVersion: 'latest'

    - task: AzureKeyVault@2
      displayName: TF_Keyvault
      inputs:
        azureSubscription: 'SPN-Project42'
        KeyVaultName: 'keyvaultProject42690593'
        SecretsFilter: '*'
        RunAsPreJob: false

    - task: TerraformTaskV3@3
      displayName: TF_Init
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'SPN-Project42'
        backendAzureRmResourceGroupName: 'S2-RG-Project42-CORE'
        backendAzureRmStorageAccountName: 'storagecrproject42690593'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'main.tfstate'

    - task: TerraformTaskV3@3
      displayName: 'TF_Plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        commandOptions: '-out=main.tfplan -input=false -var-file=vars-dev.tfvars'
        environmentServiceNameAzureRM: 'SPN-Project42'
    - task: TerraformTaskV3@3
      displayName: 'TF_Apply'
      inputs:
        provider: 'azurerm'
        command: 'apply'
        commandOptions: 'main.tfplan'
        environmentServiceNameAzureRM: 'SPN-Project42'
    - task: SqlAzureDacpacDeployment@1
      displayName: 'TF_SQL'
      inputs:
        azureSubscription: 'SPN-Project42'
        AuthenticationType: 'server'
        ServerName: '$(SQLServer-InstanceName).database.windows.net'
        DatabaseName: '$(SQLServer-Database1Name)'
        SqlUsername: '$(SQLServer-InstanceAdminUserName)'
        SqlPassword: '$(SQLServer-InstanceAdminPassword)'
        deployType: 'SqlTask'
        SqlFile: 'dba01.sql'
        IpDetectionMethod: 'AutoDetect'

- stage: TF_PROVISION
  jobs:
  - job:
    steps:
    - task: TerraformInstaller@0
      displayName: TF_Install
      inputs:
        terraformVersion: 'latest'

- stage: TF_DECOMMISSION
  jobs:
  - job: ApproveDecom
    pool: server
    steps:
    - task: ManualValidation@0
      displayName: TF_Approve
      inputs:
        instructions: 'Stage TF_DECOMMISSION, do you approve?'
  - job: 
    dependsOn: ApproveDecom
    condition: Succeeded()
    steps:
    - task: TerraformInstaller@0
      displayName: TF_Destroy
      inputs:
        terraformVersion: 'latest'
    - task: TerraformTaskV3@3
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'SPN-Project42'
        backendAzureRmResourceGroupName: 'S2-RG-Project42-CORE'
        backendAzureRmStorageAccountName: 'storagecrproject42690593'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'main.tfstate'
    - task: TerraformTaskV3@3
      inputs:
        provider: 'azurerm'
        command: 'destroy'
        environmentServiceNameAzureRM: 'SPN-Project42'
