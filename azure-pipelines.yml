# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: TF_VALIDATE
  displayName: 'TF_VALIDATE'
  jobs:
  - job:
    steps:
    - task: TerraformInstaller@0
      displayName: 'Terraform_INSTALL'
      inputs:
        terraformVersion: 'latest'

- stage: TF_PROVISION
  displayName: 'TF_PROVISION'
  jobs:
  - job:
    steps:
    - task: TerraformInstaller@0
      displayName: 'ToDo'
      inputs:
        terraformVersion: 'latest'
    - task: TerraformTaskV3@3
      displayName: 'TF_Init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'S2-DevOps42-JackR-Project42'
        backendAzureRmResourceGroupName: 'S2-RG-DevOps42'
        backendAzureRmStorageAccountName: 's2storageaccountdevops42'
        backendAzureRmContainerName: 's2containerdevops42'
        backendAzureRmKey: 'main.tf'


- stage: TF_DECOMMISSION
  displayName: 'TF_DECOMMISSION'
  jobs:
  - job:
    steps:
    - task: TerraformInstaller@0
      displayName: 'ToDo'
      inputs:
        terraformVersion: 'latest'
