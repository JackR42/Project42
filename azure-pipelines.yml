# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
#  vmImage: ubuntu-latest
  vmImage: windows-latest

stages:
- stage: TF_VALIDATE
  displayName: 'TF_VALIDATE'
  jobs:
  - job:
    steps:
    - task: TerraformInstaller@0
      displayName: 'TF_Install'
      inputs:
        terraformVersion: 'latest'
    - task: TerraformTaskV3@3
      displayName: 'TF_Init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'S2-SPN-DevOps42-JackR-Project42'
        backendAzureRmResourceGroupName: 'S2-RG-DevOps42'
        backendAzureRmStorageAccountName: 's2storageaccountdevops42'
        backendAzureRmContainerName: 's2containerdevops42'
        backendAzureRmKey: 'main.tf'
    - task: AzureKeyVault@2      
      displayName: 'TF_Keyvault'
      inputs:
        azureSubscription: 'S2-SPN-DevOps42-JackR-Project42'
        KeyVaultName: 'S2-Keyvault42'
        SecretsFilter: '*'
        RunAsPreJob: true

    - task: TerraformTaskV3@3
      displayName: 'TF_Validate'
      inputs:
        provider: 'azurerm'
        command: 'validate'
    - task: TerraformTaskV3@3
      displayName: 'TF_Plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        environmentServiceNameAzureRM: 'S2-SPN-DevOps42-JackR-Project42'

- stage: TF_PROVISION
  displayName: 'TF_PROVISION'
  jobs:
  - job:
    steps:
    - task: TerraformInstaller@0
      displayName: 'TF_Install'
      inputs:
        terraformVersion: 'latest'
    - task: TerraformTaskV3@3
      displayName: 'TF_Init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'S2-SPN-DevOps42-JackR-Project42'
        backendAzureRmResourceGroupName: 'S2-RG-DevOps42'
        backendAzureRmStorageAccountName: 's2storageaccountdevops42'
        backendAzureRmContainerName: 's2containerdevops42'
        backendAzureRmKey: 'main.tf'
    - task: AzureKeyVault@2      
      displayName: 'TF_Keyvault'
      inputs:
        azureSubscription: 'S2-SPN-DevOps42-JackR-Project42'
        KeyVaultName: 'S2-Keyvault42'
        SecretsFilter: '*'
        RunAsPreJob: true
    - task: TerraformTaskV3@3
      displayName: 'TF_Apply'
      inputs:
        provider: 'azurerm'
        command: 'apply'
        environmentServiceNameAzureRM: 'S2-SPN-DevOps42-JackR-Project42'
    - task: SqlAzureDacpacDeployment@1
      displayName: 'TF_SQL'
      inputs:
        azureSubscription: 'S2-SPN-DevOps42-JackR-Project42'
        AuthenticationType: 'server'
        ServerName: 'sqlserver42x679e6e9.database.windows.net'
        DatabaseName: 'dba42'
#        SqlUsername: 'admindba'
#        SqlPassword: 'ABCabc123.42'
        SqlUsername: '$(DatabaseAdminUserName)'
        SqlPassword: '$(DatabaseAdminPassword)'
        deployType: 'SqlTask'
        SqlFile: 'dba42.sql'
        IpDetectionMethod: 'AutoDetect'

- stage: TF_DECOMMISSION
  displayName: 'TF_DECOMMISSION'
  jobs:
  - job:
    steps:
    - task: TerraformInstaller@0
      displayName: 'TF_Install'
      inputs:
        terraformVersion: 'latest'
    - task: TerraformTaskV3@3
      displayName: 'TF_Init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'S2-SPN-DevOps42-JackR-Project42'
        backendAzureRmResourceGroupName: 'S2-RG-DevOps42'
        backendAzureRmStorageAccountName: 's2storageaccountdevops42'
        backendAzureRmContainerName: 's2containerdevops42'
        backendAzureRmKey: 'main.tf'
    - task: TerraformTaskV3@3
      displayName: 'TF_Destroy'
      inputs:
        provider: 'azurerm'
        command: 'destroy'
        environmentServiceNameAzureRM: 'S2-SPN-DevOps42-JackR-Project42'
